--- # Configure lxr by lxr_user
- hosts: lxrservers

  vars:
    lxr_user: 'lxruser'

    lxr_gen_template: '~/gen-configure-lxr.j2'
    lxr_gen_script: '/home/lxruser/gen-configure-lxr.py'

    # For gen-configure-lxr.j2 template
    lxr_host_url: 'http://192.168.170.64'
    lxr_glimpse_bin: '/home/lxruser/local/bin/glimpse'
    lxr_glimpseindex_bin: '/home/lxruser/local/bin/glimpseindex'
    lxr_glimpse_db_dir: '/home/lxruser/local/share/glimpse'
    lxr_apache_ver: '2.2'
    lxr_tree_name: 'nupic.core'
    lxr_caption: 'Nupic.core by Lxr'
    lxr_source_dir: '/home/lxruser/local/share/lxr/nupic.core'
    lxr_version_label: 'TAG'
    lxr_tag: '2014-09-24'
    lxr_db_name: '/home/lxruser/local/share/lxr/lxr.db'
    lxr_config_script: '/home/lxruser/lxr/scripts/configure-lxr.pl'
    lxr_dir: '/home/lxruser/lxr'

    lxr_custom_dir: '/home/lxruser/lxr/custom.d'
    lxr_config: '/home/lxruser/lxr/lxr.conf'

  remote_user: "{{ lxr_user }}"
  gather_facts: False

  tasks:

    - name: check if lxr.conf exists in lxr_custom_dir
      stat: path={{ lxr_custom_dir ~"/lxr.conf" }}
      register: st

    - name: generate the pexpect script to run configure-lxr.pl
      template: src={{ lxr_gen_template }} dest={{ lxr_gen_script }} mode=0755
      register: pexpect

    - name: determine if update is necessary
      set_fact:
        need_to_update: "{{ st.stat.exists == False or st.stat.size == 0 or
                             pexpect | changed }}"

    - name: execute the generated script
      command: chdir={{ lxr_dir }} "{{ lxr_gen_script }}"
      when: need_to_update

      # --> This generates "lxr.conf" and "initdb.sh"

    - name: copy the config file to the right place
      command: chdir={{ lxr_custom_dir }} cp ./lxr.conf {{ lxr_config }}
      when: need_to_update

    - name: initialize Lxr DB
      shell: creates={{ lxr_db_name }} chdir={{ lxr_custom_dir }} ./initdb.sh

